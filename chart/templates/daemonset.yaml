apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ .Values.daemonSet.name }}"
spec:
  selector:
    matchLabels:
      name: "{{ .Values.daemonSet.matchLabel }}"
  template:
    metadata:
      labels:
        name: "{{ .Values.daemonSet.matchLabel }}"
    spec:
      containers:
        - name: patcher
          image: {{ .Values.image.registry }}/{{ .Values.image.image }}:{{ .Values.image.tag }}
          {{ with .Values.imagePullPolicy }}
          imagePullPolicy: {{ . }}
          {{ end }}
          tty: true
          stdin: true
          stdinOnce: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: host
              mountPath: /host
            - name: inline-playbooks
              mountPath: /k8s-node-patcher/playbooks
          resources: {}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      volumes:
        - name: host
          hostPath:
            path: /
        - name: inline-playbooks
          configMap:
            name: inline-playbooks
      hostNetwork: true
      hostIPC: true
      hostPID: true
      tolerations:
        - operator: "Exists"
      serviceAccountName: "{{ .Values.serviceAccount.name }}"
